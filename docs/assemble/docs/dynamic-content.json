[
  "this.state = {count: \"_count_\",};",
  "div",
  ["h2", { "class": "text-secondary mb-3" }, "Dynamic Content"],
  ["p", "The content of your page can change dynamically"],
  ["hr"],
  ["h4", { "class": "mt-3" }, "Real click counter"],
  ["p", "This time, we are going to create a button that will display the amount of times you click it unlike last time."],
  [
    "this.onMount = (dom) => hljs.highlightBlock(dom.querySelector(\"pre\"));",
    "this.state = {count: \"_count_\",};",
    "div",
    { "class": "my-4" },
    [
      "pre",
      { "class": "html" },
      "<button realClickCounter onclick=\"this.self.state.count++\">\r\n    <script init>\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    </script>\r\n    You clicked me _count_ times! \r\n</button>"
    ]
  ],
  [
    "p",
    "Notice that here we don't have to call setState to update the view, it will do it by itself. Also,",
    ["code", " _count_ "],
    "will get replaced by the value in the component state. To access the\r\n    component element inside an",
    ["b", " event attribute"],
    ", use",
    ["code", " this.self "],
    "and to access it",
    ["b", " in an init script"],
    ", it is just",
    ["code", " this"],
    "."
  ],
  ["h5", { "class": "my-4" }, "Here is a live demo!"],
  ["this.state = {count: 0,};", "button", { "onclick": "this.self.state.count++", "class": "btn btn-primary mb-4" }, "You clicked me _count_ times!"],
  ["hr"],
  ["h4", { "class": "mt-3" }, "The other way..."],
  ["p", "is much more flexible unlike the", ["code", " _[state]_ "], "way. Howerver, it looks less clean in the source code."],
  [
    "this.onMount = (dom) => hljs.highlightBlock(dom.querySelector(\"pre\"));",
    "div",
    { "class": "my-4" },
    [
      "pre",
      { "class": "html" },
      "<button realClickCounter onclick=\"this.self.state.count++\">\r\n    <script init>\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    </script>\r\n    <script>\r\n        let oddOrEven = (self.state.count % 2 == 0) ? \"even\" : \"odd\"\r\n        return `You clicked me ${self.state.count} times and the number is now ${oddOrEven}!`\r\n    </script> \r\n</button>"
    ]
  ],
  ["p", "A regular script can return almost anything you wish! Notice that in a", ["b", " regular script"], ", it is", ["code", " self "], "to access the component object."],
  ["h5", { "class": "my-4" }, "Another live demo!"],
  [
    "this.state = {count: 0,};",
    "button",
    { "onclick": "this.self.state.count++", "class": "btn btn-primary mb-4" },
    ["return `You clicked me ${self.state.count} times and the number is now ${self.state.count % 2 == 0 ? \"even\" : \"odd\"}!`;"]
  ],
  ["h6", { "class": "my-4" }, "Next up, parsing options!"],
  ["Inassembly.initializers.link(this);", "a", { "to": "/app/docs/parsing-options" }, ["button", { "class": "btn btn-outline-secondary btn-lg" }, "Next"]]
]
